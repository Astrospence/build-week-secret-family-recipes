exports.up = async (knex) => {
  await knex.schema
    .createTable('users', (users) => {
      users.increments('user_id')
      users.string('username', 200)
        .notNullable()
        .unique()
      users.string('password', 200)
        .notNullable()
    })
    .createTable('categories', (category) => {
      category.increments('category_id')
      category.string('name', 200)
        .notNullable()
        .unique()
    })
    .createTable('recipes', (recipe) => {
      recipe.increments('recipe_id')
      recipe.string('title', 200)
        .notNullable()
        .unique()
      recipe.string('source', 200)
      recipe.text('instructions', 500)
        .notNullable()
      recipe.integer('category_id')
        .notNullable()
        .unsigned()
        .references('category_id')
        .inTable('categories')
        .onDelete('RESTRICT')
        .onUpdate('CASCADE')
    })
    .createTable('ingredients', (ingredient) => {
      ingredient.increments('ingredient_id')
      ingredient.string('name')
        .notNullable()
        .unique()
    })
    .createTable('recipe_ingredients', (table) => {
      table.increments('recipe_ingredient_id')
      table.integer('recipe_id')
        .notNullable()
        .unsigned()
        .references('recipe_id')
        .inTable('recipes')
        .onDelete('RESTRICT')
        .onUpdate('CASCADE')
      table.integer('ingredient_id')
        .notNullable()
        .unsigned()
        .references('ingredient_id')
        .inTable('ingredients')
        .onDelete('RESTRICT')
        .onUpdate('CASCADE')
    })
}

exports.down = async (knex) => {
  await knex.schema
    .dropTableIfExists('recipe_ingredients')
    .dropTableIfExists('ingredients')
    .dropTableIfExists('recipes')
    .dropTableIfExists('categories')
    .dropTableIfExists('users')
}
